---

# Get Java version String (eg: 11.0.9, 1.8.0_181)
- name: "({{ ansible_distribution }}) KEYCLOAK::Initialize - Check current JAVA version."
  command: >
    java -version
  changed_when: false
  failed_when: false
  check_mode: false
  register: _java_version

# Print Current JAVA Version
- name: "({{ ansible_distribution }}) KEYCLOAK::Initialize - Print Current JAVA version Check Raw result"
  debug:
   msg: "{{ _java_version }}"

# Extract Java Major and Minor version
- name: "({{ ansible_distribution }}) KEYCLOAK::Initialize - Define Java Install Status"
  set_fact:
   _java_installed: "{{ _java_version.rc == 0 }}"
   _keycloak_download: "{{ keycloak_download | default(_keycloak_downloads[keycloak_version]) }}"
   _mysql_jdbc_download: "{{ mysql_jdbc_download | default(_mysql_jdbc_downloads[mysql_jdbc_version]) }}"
   _postgresql_jdbc_download: "{{ postgresql_jdbc_download | default(_postgresql_jdbc_downloads[postgres_jdbc_version]) }}"
   _keycloak_downloaded_file_path: "{{ _keycloak_download_dir }}/keycloak-{{ keycloak_version }}.tar.gz"
   _mysql_jdbc_download_file_path: "{{ _keycloak_download_dir }}/mysql-connector-java-{{ mysql_jdbc_version }}.tar.gz"
   _postgresql_jdbc_download_file_path: "{{ _keycloak_download_dir }}/postgresql-{{ postgres_jdbc_version }}.jar"

# Extract Java Major and Minor version
- name: "({{ ansible_distribution }}) KEYCLOAK::Initialize - Extract Java Major and Minor version"
  set_fact:
   _java_version_major: "{{ _java_version.stderr_lines[0].split(' ')[2].split('.')[0] | regex_replace('^\"', '') }}"
  when:
   - _java_installed|bool
